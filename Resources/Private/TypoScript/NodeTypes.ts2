# This object is experimental and may not be working yet
prototype(Flowpack.Listable:ListNode) < prototype(Flowpack.Listable:List) {
    @context.rootNode = ${q(node).property('rootNode') ? q(node).property('rootNode') : documentNode}
    @context.wrapClass = ${q(node).property('wrapClass')}
    @context.listTitle = ${q(node).property('listTitle')}
    @context.listTitleClass = ${q(node).property('listTitleClass')}
    @context.archiveLink = ${q(node).property('archiveLink')}
    @context.archiveLinkTitle = ${q(node).property('archiveLinkTitle')}
    @context.archiveLinkClass = ${q(node).property('archiveLinkClass')}

    prototype(Flowpack.Listable:Listable) {
        @context.listClass = ${q(node).property('listClass')}
        @context.itemClass = ${q(node).property('itemClass')}
        @context.sortProperty = ${q(node).property('sortProperty')}
        @context.sortOrder = ${q(node).property('sortOrder')}
        @context.limit = ${q(node).property('limit')> 0 ? String.toInteger(q(node).property('limit')) : 10000}
        @context.itemRenderer = ${q(node).property('itemRenderer')}
        @context.paginationEnabled = ${q(node).property('paginationEnabled')}
        @context.paginationInsertAbove = ${q(node).property('paginationInsertAbove')}
        @context.paginationInsertBelow = ${q(node).property('paginationInsertBelow')}
        @context.itemsPerPage = ${q(node).property('itemsPerPage')> 0 ? String.toInteger(q(node).property('itemsPerPage')) : 24}

        collection.getFromRootNode {
            condition = ${true}
            renderer = ${q(rootNode).children('[instanceof Flowpack.Listable:ListableMixin]').get()}
        }
    }

    @cache {
        mode = 'cached'
        entryIdentifier {
            node = ${node}
            editPreviewMode = ${editPreviewMode}
        }
        entryTags {
            1 = ${'Node_' + node.identifier}
            2 = ${'Node_' + documentNode.identifier}
            3 = ${'Node_' + rootNode.identifier}
            4 = ${'DescendantOf_' + rootNode.identifier}
        }
    }
    @process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
}
