prototype(Flowpack.Listable:Listable) < prototype(PackageFactory.AtomicFusion:Component) {
    currentPage = ${request.arguments.currentPage || 1}
    ##################################
    # These settings are public API: #
    ##################################

    # Can either be an array, a FlowQuery object or an ElasticSearchQueryBuilder object
    collection = ${q(site).find('[instanceof Flowpack.Listable:ListableMixin]').get()}
    sortProperty = ''
    sortOrder = 'DESC'
    limit = 10000
    offset = 0

    paginationEnabled = true
    itemsPerPage = 24
    maximumNumberOfLinks = 15

    listClass = 'Listable'
    itemClass = 'Listable-item'

    itemRenderer = ''

    renderer = Neos.Fusion:Array {
        @context.data = Flowpack.Listable:QueryInterface {
            collection = ${props.collection}
            offset = ${props.offset}
            limit = ${props.limit}
            sortProperty = ${props.sortProperty}
            sortOrder = ${props.sortOrder}
            paginationEnabled = ${props.paginationEnabled}
            currentPage = ${props.currentPage}
            itemsPerPage = ${props.itemsPerPage}
        }

        list = Flowpack.Listable:ListRenderer {
            collection = ${data.collection}
            itemRenderer = ${props.itemRenderer}
            itemClass = ${props.itemClass}
            listClass = ${props.listClass}
        }
        pagination = Flowpack.Listable:Pagination {
            @if.paginationEnabled = ${props.paginationEnabled}
            totalCount = ${data.totalCount}
            currentPage = ${props.currentPage}
            maximumNumberOfLinks = ${props.maximumNumberOfLinks}
            itemsPerPage = ${props.itemsPerPage}
        }
    }
}
